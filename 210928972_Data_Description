Firstly, I had read my txt.file into a dataframe called 'spotify_data'. I specified that the file was tab sepaarted; there were headers present; decimal points present; and that there are empty values which should be equal NA. My original dataframe consisted of 24 variables and 1667 observations. One of the first observations I made was a misspelt column name, so I had changed it to be more presentable, from 'ZZtrack_name89' to 'track name'. I changed the nane of the column as the additonal characters in the name had no significance in the dataframe.

For the variable 'mode' it is supposed to be an numeric type but due to the addition of non-numerical characters to the numbers it was automatically considered a character string in r. I had removed the additional characters and then converted it to a numeric string. Misspellings and incorrect naming of strings can lead to errors and confusion when interpretted by others and therefore cannot be considered tidy.

The 'danceability.energy' column is supposed to be two separate columns, so using seperate_wider_delim I had created inidvidual columns for the variables. By having them together it was not considered tidy data as the cells contained more than one value and therefore violated the rule that each cell must have a single value. I had then changed the 'danceability' and 'energy' variables to numeric strings as they were originally character strings. Furthermore, using mutate() I created an additional column which showed the average of each playlist in terms of danceability scores to make it easier for my colleague to compare the differences. 

For the genres, they were in separate columns (rap, rock, latin, r.b) and this violated the rule that each variable forms a column. In order to fix this error I had placed all the separated genres into one column called 'playlist genre'. I had achieved this using pivot_longer() function. I named the value variable 'playlist subgenre'. By using pivot_longer it had produced multiple rows which had NA for their subgenre and had also contained repeated values in the rest of the row, which made it look too confusing. I decided to use filter() to remove the rows which had NA as their value in 'playlist subgenre'. 

Using mutate and gsub I had changed any incorrect spellings in the dataframe. This included changing '0.5' to '2020' in the 'track album release data' variable. I was able to use gsub as this variable is a character not a numeric. The '0.5' was clearly an error and it needed to be fixed. I had also fixed a misspelling for one of the 'track_artist' to prevent colleagues from beign unbale to find the artist. 

In the variable instrumentalness there were values which were greater than 1. It was specified that in order to quantify instrumentalness the value needs to be between 0 and 1. Therefore, for the values greater than 1, I used mutate() function to turn them into NA. This makes it much easier to interpret as only the valid data is being shown. 

As my colleague wants to compare the difference between the 'danceability' scores across the playlists, I had changed the 'playlist_name' from a character string to a factor string. This stores the data much more efficiently and makes it easier to sort through when working in large datasets. 

